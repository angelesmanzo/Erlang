Часть 1

а)
$ for N in `seq 20 5 45`; do echo $N; erl -noshell -s fib test $N; echo; done


20 
fib_p::          6765    0.000419 seconds

25
fib_p::          75025   0.005105 seconds

30
fib_p::          832040          0.046358 seconds

35
fib_p::          9227465         0.527241 seconds

40
fib_p::          102334155       5.883168 seconds

45
fib_p::          1134903170      70.658209 seconds

Код тестирующей функции:
https://gist.github.com/Warprobot/db409c964013ef670750

Ответ: при N = 40 (с шагом 5) время выполнения fib_p становится больше 5 секунд.
Так происходит за счет того, что стек вызова функций переполняется,
и время выполнения процедуры деградирует по экспоненте 

б)
$ echo 10000; erl -noshell -s fib test 10000;

Время выполнения: `0.002138 seconds`.

Такая скорость достигается за счет оптимизации хвостовой рекурсии
путём преобразования её в плоскую итерацию, что позволяет не создавать ситуацию
переполняния стека вызова функций.

Часть 2
Для замера времени используем функцию timer:tc/3, которая возвращает {Время, результат}

1. timer:tc(mobius, find_square_multiples, [4, 30000]).
{15383,29887}

2. timer:tc(mobius, find_square_multiples, [5, 30000]).
{95451,29348}

3. timer:tc(mobius, find_square_multiples, [6, 30000]).
{696622,24647}
